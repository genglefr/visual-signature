{
  "name": "visualsign",
  "private": true,
  "version": "0.0.1",
  "main": "main.js",
  "description": "A project for generating visually signed pdf document",
  "repository": "https://github.com/genglefr/visual-sign",
  "license": "MIT",
  "devDependencies": {
    "bower": "^1.7.7",
    "electron": "1.7.8",
    "electron-winstaller": "^2.6.3",
    "http-server": "^0.9.0",
    "jasmine-core": "^2.4.1",
    "karma": "^0.13.22",
    "karma-chrome-launcher": "^0.2.3",
    "karma-firefox-launcher": "^0.1.7",
    "karma-jasmine": "^0.3.8",
    "karma-junit-reporter": "^0.4.1",
    "protractor": "^4.0.9"
  },
  "scripts": {
    "postinstall": "bower install",
    "update-deps": "npm update",
    "postupdate-deps": "bower update",
    "prestart": "npm install",
    "start": "http-server -a 0.0.0.0 -p 8000 -c-1 ./app",
    "pretest": "npm install",
    "test": "karma start karma.conf.js",
    "test-single-run": "karma start karma.conf.js --single-run",
    "preupdate-webdriver": "npm install",
    "update-webdriver": "webdriver-manager update",
    "preprotractor": "npm run update-webdriver",
    "protractor": "protractor e2e-tests/protractor.conf.js",
    "electron-dist": "C:/Users/genglefr/IdeaProjects/pdf-signature/node_modules/electron/dist/electron.exe C:/Users/genglefr/IdeaProjects/pdf-signature",
    "package-win": "electron-packager . --overwrite --asar=true --platform=win32 --arch=ia32 --icon=./app/assets/spikeseed_vXb_icon.ico --prune=true --out=release-builds --version-string.CompanyName=CE --version-string.FileDescription=CE --version-string.ProductName=\"Visual sign\" --ignore=.idea/* --ignore=app/samples/* --ignore=app/bower_components/*",
    "install-win": "node wins.js",
    "update-index-async": "node -e \"var fs=require('fs'),indexFile='app/index-async.html',loaderFile='app/bower_components/angular-loader/angular-loader.min.js',loaderText=fs.readFileSync(loaderFile,'utf-8').split(/sourceMappingURL=angular-loader.min.js.map/).join('sourceMappingURL=bower_components/angular-loader/angular-loader.min.js.map'),indexText=fs.readFileSync(indexFile,'utf-8').split(/\\/\\/@@NG_LOADER_START@@[\\s\\S]*\\/\\/@@NG_LOADER_END@@/).join('//@@NG_LOADER_START@@\\n'+loaderText+'    //@@NG_LOADER_END@@');fs.writeFileSync(indexFile,indexText);\""
  },
  "dependencies": {
    "jspdf": "^1.3.5",
    "signature_pad": "^2.3.2"
  }
}
